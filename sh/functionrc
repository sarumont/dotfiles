#
# Functions for wrapping up find(1)
#
fe() {
	find . -iname $1 | grep -v \\(\\.svn\\|\\.sw[a-z]\\|\\.git\\)
}

f() {
	find . -iname \*$1\* | grep -v \\(\\.svn\\|\\.sw[a-z]\\|\\.git\\)
}

fex() {
	find . | grep -v \\(\\.svn\\|\\.sw[a-z]\\|\\.git\\) | xargs grep $1
}

fx() {
	find . | grep -v \\(\\.svn\\|\\.sw[a-z]\\|\\.git\\) | xargs grep -i $1
}

fexj() {
	find . -name \*.java | grep -v \\(\\.svn\\|\\.sw[a-z]\\|\\.git\\) | xargs grep $1
}

fj() {
	find . -name \*.java | grep -v \\(\\.svn\\|\\.sw[a-z]\\|\\.git\\) | xargs grep -i $1
}


track_lengths() {
	for x in *.flac; do 
		metaflac --show-total-samples --show-sample-rate $x |\
			tr '\n' ' ' |\
			awk '{print $1/$2}' |\
			awk '{printf int($1/60) ":%02.0f\n", $1%60 }'
	done
}


# Ease the switching between trunk/branches in svn codebases following the standard layout of:
#	<repo>
#		/trunk
#		/branches
#		/tags
sw() {

	if [[ "--help" == $1 ]]; then
		echo "Usage: sw <branchname>"
		echo "\nIf no branch is provided, sw will switch to trunk"
		return 1
	fi

	switch_to=$1
	current=`svn info | grep URL | sed -e 's/URL: //'`
	repo=""
	if [[ "" == $1 ]]; then

		switch_to="trunk"
		repo=`echo $current | sed -e 's%\(.*\)branches/.*%\1%'`
		repo+="trunk/"

		tail=`echo $current | sed -e 's%.*branches/\(.*\)%\1%'`
		IFS="/"
		valid=0
		svn ls ${repo} 2&>1 >/dev/null
		if [[ $? == 1 ]]; then
			valid=0
		else
			valid=1
		fi

		if [[ $valid == 0 ]]; then
			echo "Not a valid branch: $1 ($repo)"
			return
		fi

	else

		if [[ $current == *trunk* ]]; then

			cmd="svn info | grep URL | sed -e 's/URL: //' | sed -e 's%trunk%branches/$1%'"
			repo=`eval $cmd`
			svn ls ${repo} 2&>1 >/dev/null
			if [[ $? == 1 ]]; then
				echo "Not a valid branch: $1 ($repo)"
				return
			fi

		else

			repo=`echo $current | sed -e 's%\(.*branches/\).*%\1%'`
			repo+="$1/"

			tail=`echo $current | sed -e 's%.*branches/\(.*\)%\1%'`
			IFS="/"
			valid=0
			for x in `echo $tail`; do

				svn ls ${repo}${x} 2&>1 >/dev/null
				if [[ $? == 1 ]]; then
					valid=0
					continue
				fi
				repo+="${x}/"
				valid=1

			done

			if [[ $valid == 0 ]]; then
				echo "Not a valid branch: $1 ($repo)"
				return
			fi

		fi

	fi

	echo "*** Switching to:   $repo"
	svn switch $repo
	echo "*** Switched to $switch_to"

}

# run git status or svn status as apropriate
scm_st() {
	if [[ -d .svn ]]; then
		svn status
	else
		git status
	fi
}

# Local functions
if [[ -r ~/.local/functionrc ]]; then
    . ~/.local/functionrc
fi

git_svn_version() {
	if [[ -d .svn ]]; then
		echo `command svnversion`
	else
		base=`git svn info | grep "Last Changed Rev" | awk '{print $4}'`
		mod=`(git st | grep "modified:\|added:\|deleted:" -q) && echo "M"`
		echo $base$mod
	fi
}
# vim: set ft=zsh:
