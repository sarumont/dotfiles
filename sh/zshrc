# The following lines were added by compinstall

zstyle ':completion:*' completer _expand _complete _correct _approximate
zstyle ':completion:*' list-colors ''
zstyle ':completion:*' matcher-list '' '' '' ''
zstyle ':completion:*' menu select=long
zstyle ':completion:*' select-prompt %SScrolling active: current selection at %p%s
zstyle :compinstall filename '$HOME/.zshrc'

case $TERM in
	URxvt-256color)
		export TERM=rxvt-unicode
		;;
esac

autoload -Uz compinit
compinit
# End of lines added by compinstall
# Lines configured by zsh-newuser-install
HISTFILE=~/.histfile
HISTSIZE=100000
SAVEHIST=100000
setopt extendedhistory incappendhistory histverify histignoredups histnostore histignorespace histreduceblanks autocd extendedglob notify dvorak promptsubst
unsetopt beep nomatch
bindkey -v
# End of lines configured by zsh-newuser-install
#
# Set up my keychain
KEYCHAIN=`which keychain`
if [[ $? == 0 ]]; then 
	if [[ -r ~/.ssh/id_dsa ]]; then
		$KEYCHAIN -q ~/.ssh/id_dsa
	fi
	if [[ -r ~/.gnupg/secring.gpg ]]; then
		$KEYCHAIN -q 9E54EF59
	fi
    [ -f ~/.keychain/`hostname`-sh ] && . ~/.keychain/`hostname`-sh
    [ -f ~/.keychain/`hostname`-sh-gpg ] && . ~/.keychain/`hostname`-sh-gpg
fi

if [[ -r ~/.local/sh/zshrc ]]; then
	~/.local/sh/zshrc
fi

# Source aliases
if [[ -r ~/.dotfiles/sh/aliasrc ]]; then
    . ~/.dotfiles/sh/aliasrc
fi

# functions
if [[ -r ~/.dotfiles/sh/functionrc ]]; then
	. ~/.dotfiles/sh/functionrc
fi


# source local functions
fpath=($fpath $HOME/.dotfiles/zsh-git/functions)
typeset -U fpath

autoload -U promptinit
promptinit
prompt wunjo

precmd () {
	## set title
	title "zsh: $PWD"
}
	
setopt extended_glob
preexec () {

	# The full command line comes in as "$1"
	local cmd="$1"
	local -a args

	args=${(z)cmd}

	if [ "${args[1]}" = "fg" ] ; then
		local jobnum="${args[2]}"
		if [ -z "$jobnum" ] ; then
			# If no jobnum specified, find the current job.
			for i in ${(k)jobtexts}; do
				[ -z "${jobstates[$i]%%*:+:*}" ] && jobnum=$i
			done
		fi
		cmd="${jobtexts[${jobnum#%}]}"
	fi
	title "$cmd"
}

title () {
	
	# copied (though modified) from JLS: 
	#   http://www.semicomplete.com/files/blogposts/20091227/zsh-titles
	# This is madness.
	# We replace literal '%' with '%%'
	# Also use ${(V) ...} to make nonvisible chars printable (think cat -v)
	# Replace newlines with '; '
	setopt prompt_subst
	local value="${${${(V)1//\%/\%\%}//'\n'/; }//'\t'/ }"
	local location

	location="$HOST"
	[ "$USERNAME" != "$LOGNAME" ] && location="${USERNAME}@${location}"

	# Special format for use with print -Pn
	local width
	(( width = ${COLUMNS} - 6 - ${#${(%):-zsh: ${location}}} ))
	value="%${width}>...>$value%<<"
	unset prompt_subst
	case $TERM in
		noscreen)
			local promptsize=${#${(%):-${value}}}
			fill="\${(l.(($width - $promptsize + 1)).. .)}"
			print -Pn "\e]0;${value}${fill}${location}\a"
			;;
		screen)
			local promptsize=${#${(%):-${value}}}
			fill="\${(l.(($width - $promptsize + 1)).. .)}"
			print -Pn "\e]0;${value}${fill}${location}\a"
			;;
		xterm*)
			print -Pn "\e]0;$value\a"
			;;
	esac
	setopt LOCAL_OPTIONS
}
