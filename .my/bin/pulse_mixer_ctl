#!/bin/sh

# Original script: http://blog.waan.name/pulseaudio-setting-volume-from-command-line/

# get default sink name
SINK_NAME=$(pacmd dump | perl -a -n -e 'print $F[1] if /set-default-sink/')

# set max allowed volume; 0x10000 = 100%
VOL_MAX="0x10000"

STEPS="16" # 2^n
VOL_STEP=$((VOL_MAX / STEPS))

VOL_NOW=`pacmd dump | grep -P "^set-sink-volume $SINK_NAME\s+" | perl -p -n -e 's/.+\s(.x.+)$/$1/'`
MUTE_STATE=`pacmd dump | grep -P "^set-sink-mute $SINK_NAME\s+" | perl -p -n -e 's/.+\s(yes|no)$/$1/'`

plus() {
	VOL_NEW=$((VOL_NOW + VOL_STEP))
	if test $VOL_NEW -gt $((VOL_MAX)); then
		VOL_NEW=$((VOL_MAX))
	fi
	pactl set-sink-volume $SINK_NAME `printf "0x%X" $VOL_NEW`
}

minus() {
	VOL_NEW=$((VOL_NOW - VOL_STEP))
	if test $(($VOL_NEW)) -lt $((0x00000)); then
		VOL_NEW=$((0x00000))
	fi
	pactl set-sink-volume $SINK_NAME `printf "0x%X" $VOL_NEW`
}

mute() {
	if test $MUTE_STATE = "no"; then
		pactl set-sink-mute $SINK_NAME 1
	elif test $MUTE_STATE = "yes"; then
		pactl set-sink-mute $SINK_NAME 0
	fi
}

get() {
	BAR=""
	if test $MUTE_STATE = "yes"; then
		BAR="mute"
		ITERATOR=$((STEPS / 2 - 2))
		while test $ITERATOR -gt 0; do
			BAR=" ${BAR} "
			ITERATOR=$((ITERATOR - 1))
		done
	else
		DENOMINATOR=$((VOL_MAX / STEPS))
		LINES=$((VOL_NOW / DENOMINATOR))
		DOTS=$((STEPS - LINES))
		while test $LINES -gt 0; do
			BAR="${BAR}|"
			LINES=$((LINES - 1))
		done
		while test $DOTS -gt 0; do
			BAR="${BAR}."
			DOTS=$((DOTS - 1))
		done
	fi
	echo "$BAR"
}

case "$1" in
	plus)
		plus
		;;
	minus)
		minus
		;;
	mute)
		mute
		;;
	get)
		get
esac

